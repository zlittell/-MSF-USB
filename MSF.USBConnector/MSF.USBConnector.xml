<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MSF.USBConnector</name>
    </assembly>
    <members>
        <member name="T:MSF.USBConnector.Events.DeviceConnectedEvent">
            <summary>Message For Device Connecting.</summary>
        </member>
        <member name="M:MSF.USBConnector.Events.DeviceConnectedEvent.#ctor(System.Object,Device.Net.DeviceEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:MSF.USBConnector.Events.DeviceConnectedEvent"/> class.
            </summary>
            <param name="s">Sender Object.</param>
            <param name="e">DeviceEventArgs.</param>
        </member>
        <member name="P:MSF.USBConnector.Events.DeviceConnectedEvent.Sender">
            <inheritdoc/>
        </member>
        <member name="P:MSF.USBConnector.Events.DeviceConnectedEvent.EventArgs">
            <inheritdoc/>
        </member>
        <member name="T:MSF.USBConnector.Events.DeviceDisconnectedEvent">
            <summary>Message For Device Disconnecting.</summary>
        </member>
        <member name="M:MSF.USBConnector.Events.DeviceDisconnectedEvent.#ctor(System.Object,Device.Net.DeviceEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:MSF.USBConnector.Events.DeviceDisconnectedEvent"/> class.
            </summary>
            <param name="s">Sender Object.</param>
            <param name="e">DeviceEventArgs.</param>
        </member>
        <member name="P:MSF.USBConnector.Events.DeviceDisconnectedEvent.Sender">
            <inheritdoc/>
        </member>
        <member name="P:MSF.USBConnector.Events.DeviceDisconnectedEvent.EventArgs">
            <inheritdoc/>
        </member>
        <member name="T:MSF.USBConnector.Events.IDeviceListenerEvent">
            <summary>Describes an event from the Device Listener.</summary>
        </member>
        <member name="P:MSF.USBConnector.Events.IDeviceListenerEvent.EventArgs">
            <summary>Gets the device event arguments.</summary>
        </member>
        <member name="P:MSF.USBConnector.Events.IDeviceListenerEvent.Sender">
            <summary>Gets the sender of the event.</summary>
        </member>
        <member name="T:MSF.USBConnector.USBDeviceConnector">
            <summary>Class for usb device connection.</summary>
        </member>
        <member name="P:MSF.USBConnector.USBDeviceConnector.UsbInterface">
            <summary>Gets or sets interface for filtering devicelist.</summary>
        </member>
        <member name="P:MSF.USBConnector.USBDeviceConnector.DeviceDefinition">
            <summary>Gets or sets Device Definition for filtering devices.</summary>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.#ctor(Caliburn.Micro.IEventAggregator)">
            <summary>
            Initializes a new instance of the <see cref="T:MSF.USBConnector.USBDeviceConnector"/> class.
            </summary>
            <param name="aggregator">Event Aggregator wired in from caliburn micro.</param>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.RunAfterInitialized">
            <summary>
            This method should be ran after the derived class is initialized.
            </summary>
        </member>
        <member name="P:MSF.USBConnector.USBDeviceConnector.DeviceListener">
            <inheritdoc/>
        </member>
        <member name="P:MSF.USBConnector.USBDeviceConnector.DeviceLogger">
            <inheritdoc/>
        </member>
        <member name="P:MSF.USBConnector.USBDeviceConnector.DeviceTracer">
            <inheritdoc/>
        </member>
        <member name="P:MSF.USBConnector.USBDeviceConnector.SelectedUSBDevice">
            <inheritdoc/>
        </member>
        <member name="P:MSF.USBConnector.USBDeviceConnector.USBDeviceList">
            <inheritdoc/>
        </member>
        <member name="P:MSF.USBConnector.USBDeviceConnector.DeviceFilters">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.SetupDeviceListener">
            <summary>Sets up Device Listener.</summary>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.AddHidDeviceToFilterList(Device.Net.FilterDeviceDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.UpdateUSBHIDDeviceList">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.FindFirstMatchingUSBHIDDevice">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.OpenUSBDevice">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.CloseUSBDevice">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.ParsePayload(Device.Net.ReadResult)">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.ReceivedUSBMessageHandler(MSF.USBMessages.IReceivableUSBMessage)">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.WriteAndReadUSBDevice(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.ReadUSBDevice">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.WriteUSBDevice(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.ContinousRead">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.SendUSBMessage(MSF.USBMessages.ISendableUSBMessage)">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.SelectDevice(Device.Net.IDevice)">
            <inheritdoc/>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.RefreshFilteredDeviceList">
            <summary>Refresh device list and filter it for only this devices correct interface.</summary>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.DoesDeviceListContainDevice(Device.Net.IDevice)">
            <summary>
            Checks if the device list contains a device (Compares DeviceIDs).
            </summary>
            <param name="device">Device to check for.</param>
            <returns>True if exists in list.</returns>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.DeviceConnectedEvent(System.Object,Device.Net.DeviceEventArgs)">
            <summary>
            Event Called when filtered device connects.
            </summary>
            <param name="sender">Event Sender.</param>
            <param name="e">Event Arguments.</param>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.DeviceDisconnectEvent(System.Object,Device.Net.DeviceEventArgs)">
            <summary>
            Event Called when filtered device connects.
            </summary>
            <param name="sender">Event Sender.</param>
            <param name="e">Event Arguments.</param>
        </member>
        <member name="M:MSF.USBConnector.USBDeviceConnector.DoesNotContainCorrectInterface(Device.Net.IDevice)">
            <summary>
            Returns if a device is the wrong interface.
            </summary>
            <param name="obj">IDevice to check interface.</param>
            <returns>True if does not contain correct interface.</returns>
        </member>
        <member name="T:MSF.USBConnector.Utility.ByteHelper">
            <summary>Helper class related to bytes from microcontrollers.</summary>
        </member>
        <member name="M:MSF.USBConnector.Utility.ByteHelper.IntToBigEndian(System.Int32)">
            <summary>
            Converts an integer to a byte array with the MSB first.
            </summary>
            <param name="toConvert">Integer to convert to bytes.</param>
            <returns>Big Endian Byte Array.</returns>
        </member>
        <member name="M:MSF.USBConnector.Utility.ByteHelper.IntToLittleEndian(System.Int32)">
            <summary>
            Converts an integer to a byte array with the LSB first.
            </summary>
            <param name="toConvert">Integer to convert to bytes.</param>
            <returns>Little Endian Byte Array.</returns>
        </member>
        <member name="M:MSF.USBConnector.Utility.ByteHelper.ByteArrayToIntBigEndian(System.Byte[])">
            <summary>
            Converts a byte array to an integer with the MSB first.
            </summary>
            <param name="toConvert">Array of 4 bytes to make int.</param>
            <returns>Integer converted value.</returns>
        </member>
        <member name="M:MSF.USBConnector.Utility.ByteHelper.ByteArrayToIntLittleEndian(System.Byte[])">
            <summary>
            Converts a byte array to an integer with the LSB first.
            </summary>
            <param name="toConvert">Array of 4 bytes to make int.</param>
            <returns>Integer converted value.</returns>
        </member>
    </members>
</doc>
